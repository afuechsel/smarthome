variables:
    GIT_SSL_NO_VERIFY: 'true'
    GITLAB_SSH_URL: qivicon-wbench.psst.t-online.corp
    RELEASE_BUILD_NUMBER: distribution/releaseBuildNumber.txt
    BUILD_PATH: /builds/gitlab/qrt/esh
    ESH_REPO_PATH: 'products/org.eclipse.smarthome.repo/target/*'
    GRADLE_USER_HOME: .gradle
    TEST_REPORTS_PATH: '*/target/reports/tests/*'
    TEST_REPORTS_SECOND_PATH: '*/target/test-reports/*'

image: qivicon-wbench.psst.t-online.corp/workbench/work-horse/image:latest

stages:
    - BuildDeploy
    
#--------------------------- STAGE Prepare ----------------------------
# Cannot use GIT_STRATEGY to pull repo.  There is a design issue with gitlab CI/CD.  The checkout 
# portion is run by root user, causing the source code to be owned by root.  The build is executed
# by build runner, which is coinop.
#
# Normally that is not a problem, but ESH build requires chmod to run.
# The workaround is to checkout by the build user directly.

        
#--------------------------- STAGE BUILD DEPLOY----------------------------
'Build feature branch':
    stage: BuildDeploy
    tags:
        - run02_docker
    variables:
        GIT_STRATEGY: none
    except:
        - tags
        - /^sprint.*/
        - /^release.*/
    artifacts:
        paths:
            - $ESH_REPO_PATH
        expire_in: 1 week
    script:
        - 'echo Using BUILD_PATH: $BUILD_PATH, Branch: $CI_COMMIT_REF_SLUG, SHA: $CI_COMMIT_SHA'
        - 'git clone gitlab@qivicon-wbench.psst.t-online.corp:qrt/esh.git $BUILD_PATH'
        - 'echo Checking out branch: $CI_COMMIT_REF_NAME'
        - 'cd $BUILD_PATH; ls -al $BUILD_PATH; git checkout $CI_COMMIT_REF_NAME'
        - 'cd $BUILD_PATH; ls -al $BUILD_PATH; mvn clean install -e -B -fae -DskipChecks -Dmaven.javadoc.skip=true -DaltDeploymentRepository=nexus-snapshots::default::http://qivicon-wbench.psst.t-online.corp/nexus/content/repositories/snapshots/ -Dmaven.repo.local=.repository -pl "!distribution,!tools,!tools/archetype,!tools/archetype/binding,!tools/archetype/binding.test,!features/karaf,!features/karaf/esh-tp,!features/karaf/esh-core,!features/karaf/esh-ext,!features/karaf/verify"'
        
'Build deploy sprint snapshot':
    stage: BuildDeploy
    tags:
        - run02_docker
    variables:
        GIT_STRATEGY: none
    only:
        - /^sprint.*/
    except:
        - tags
    artifacts:
        paths:
            - $ESH_REPO_PATH
        expire_in: 1 week
    script:
        - 'echo Using BUILD_PATH: $BUILD_PATH, Branch: $CI_COMMIT_REF_SLUG, SHA: $CI_COMMIT_SHA'
        - 'git clone gitlab@qivicon-wbench.psst.t-online.corp:qrt/esh.git $BUILD_PATH'
        - 'echo Checking out branch: $CI_COMMIT_REF_NAME'
        - 'cd $BUILD_PATH; ls -al $BUILD_PATH; git checkout $CI_COMMIT_REF_NAME'
        - 'cd $BUILD_PATH; ls -al $BUILD_PATH; mvn clean deploy -e -B -fae -DskipChecks -Dmaven.javadoc.skip=true -DaltDeploymentRepository=nexus-snapshots::default::http://qivicon-wbench.psst.t-online.corp/nexus/content/repositories/snapshots/ -Dmaven.repo.local=.repository -pl "!distribution,!tools,!tools/archetype,!tools/archetype/binding,!tools/archetype/binding.test,!features/karaf,!features/karaf/esh-tp,!features/karaf/esh-core,!features/karaf/esh-ext,!features/karaf/verify"'

'Build deploy release':
    stage: BuildDeploy
    tags:
        - run02_docker
    variables:
        GIT_STRATEGY: none
    only:
        - /^release.*/
    except:
        - tags
    artifacts:
        paths:
            - $ESH_REPO_PATH
        expire_in: 1 week
    script:
        - 'echo Using BUILD_PATH: $BUILD_PATH, Branch: $CI_COMMIT_REF_SLUG, SHA: $CI_COMMIT_SHA'
        - 'git clone gitlab@qivicon-wbench.psst.t-online.corp:qrt/esh.git $BUILD_PATH'
        - 'echo Checking out branch: $CI_COMMIT_REF_NAME'
        - 'cd $BUILD_PATH; ls -al $BUILD_PATH; git checkout $CI_COMMIT_REF_NAME'
        - 'cd $BUILD_PATH; ls -al $BUILD_PATH; mvn clean deploy -e -B -fae -DskipChecks -Dmaven.javadoc.skip=true -DaltDeploymentRepository=nexus-sec-releases::default::http://qivicon-wbench.psst.t-online.corp/nexus/content/repositories/s_2ndparty/ -Dmaven.repo.local=.repository -pl "!distribution,!tools,!tools/archetype,!tools/archetype/binding,!tools/archetype/binding.test,!features/karaf,!features/karaf/esh-tp,!features/karaf/esh-core,!features/karaf/esh-ext,!features/karaf/verify"'
